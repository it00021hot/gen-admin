apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: redis
  name: base-redis
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
  serviceName: base-redis-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
    spec:
      containers:
      - args:
        - /usr/local/etc/redis/my.cnf
        image: redis:latest
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 6
        name: redis
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          failureThreshold: 5
          initialDelaySeconds: 20
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 2
        resources: {}
        volumeMounts:
        - mountPath: /usr/local/etc/redis/my.cnf
          name: redis-config
          subPath: my.cnf
        - mountPath: /data
          name: redis-data
      volumes:
      - configMap:
          defaultMode: 420
          name: redis-config
        name: redis-config
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app.kubernetes.io/name: redis
      name: redis-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
      storageClassName: nfs-provisioner